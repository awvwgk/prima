name: Lint the Fortran code and the MEX gateways on GitHub hosted runners

on:
  # Trigger the workflow on push or pull request
  push:
  pull_request:  # DANGEROUS! MUST be disabled for self-hosted runners!
  # Trigger the workflow by cron. The default time zone of GitHub Actions is UTC.
  schedule:
    - cron: '0 17 * * *'
  # Trigger the workflow manually
  workflow_dispatch:


jobs:

  test:
    name: Lint the Fortran code
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        linter: [flint, mlint]
        solver: [newuoa, cobyla, lincoa, bobyqa, uobyqa]
        matlab: [latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.5.3
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY_ACT }} # This forces checkout to use SSH, not HTTPS
          submodules: recursive

      - name: Miscellaneous setup
        run: bash .github/scripts/misc_setup

      - name: Set up MATLAB
        id: set-up-matlab
        if: ${{ matrix.linter == 'mlint' }}
        uses: matlab-actions/setup-matlab@v2-beta
        with:
          release: ${{ matrix.matlab }}

      - name: Get fintrf.h and remove MATLAB
        if: ${{ matrix.linter == 'mlint' }}
        run: |
          MATLABROOT=${{steps.set-up-matlab.outputs.matlabroot}}
          # fintrf.h must be located under a directory "extern/include/", or mlint cannot find it.
          mkdir -p "$ROOT_DIR"/fortran/common/extern/include/
          cp "$MATLABROOT"/extern/include/fintrf.h "$ROOT_DIR"/fortran/common/extern/include/ || exit 2
          sudo rm -rf "$MATLABROOT"/* || exit 3  # Remove MATLAB, or the runner will run out of space.
          sudo updatedb  # Without this, fintrf.h will not be found.

      - name: Install AOCC
        run: bash .github/scripts/install_aocc

      - name: Install gfortran
        uses: awvwgk/setup-fortran@main
        id: setup-fortran
        with:
          compiler: gcc

      - name: Install Intel oneAPI
        run: bash .github/scripts/install_oneapi_linux.sh

      - name: Install g95
        run: bash .github/scripts/install_g95

      - name: Install nvfortran
        run: bash .github/scripts/install_nvfortran

      - name: Install Oracle sunf95
        run: bash .github/scripts/install_sunf95

      # Install Flang after AOCC, to make sure that flang is this one, while AOCC flang will be
      # known as aflang.
      - name: Install Flang
        run: bash .github/scripts/install_flang

      - name: Conduct the test
        run: |
          type gfortran ifort ifx aflang g95 nvfortran sunf95 flang
          cd "$ROOT_DIR"/fortran/${{ matrix.solver }} && bash ./${{ matrix.linter }} --all

name: Test armflang on Kunpeng

on:
  # Trigger the workflow on push or pull request
  #push:
  #pull_request:  # DANGEROUS! MUST be disabled for self-hosted runners!
  # Trigger the workflow by cron. The default time zone of GitHub Actions is UTC.
  schedule:
    - cron: '0 16 1-31/3 * *'
  # Trigger the workflow manually
  workflow_dispatch:


jobs:

  test:
    name: Run armflang tests
    runs-on: [self-hosted, ARM64, kp]
    continue-on-error: true
    strategy:
      fail-fast: false
      matrix:
        ikind: [i2, i8]
        solver: [newuoa, cobyla, lincoa, bobyqa, uobyqa]
        fflags: [-O1, -O2, -O3, -g, -fast]
        testdim: [small, big]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3.5.3
        with:
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY_ACT }}  # This forces checkout to use SSH, not HTTPS
          submodules: recursive

      - name: Miscellaneous setup
        run: bash .github/scripts/misc_setup

      - name: Conduct the test
        run: |
          ARMDIR="$(find /opt/arm -maxdepth 1 -name "arm-linux-compiler*" -type d -print | sort | tail -n 1)"
          if [[ -n "$ARMDIR" ]] ; then
            export PATH=$PATH:"$ARMDIR"/bin
            export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/lib
            ARMLD="$(find /opt/arm -type f -executable -name ld | xargs dirname)"
            ARMLD_DIR=${ARMLD//$'\n'/:}
            export PATH=$PATH:"$ARMLD_DIR"
          fi
          #cd "$ROOT_DIR"/fortran/${{ matrix.solver }} && bash ./flint --all && bash ./mlint --all
          export FFLAGS=${{ matrix.fflags }}
          export TESTDIM=${{ matrix.testdim }}
          cd "$ROOT_DIR"/fortran/tests && make rtest_${{ matrix.ikind }}.${{ matrix.solver }}
          cd "$ROOT_DIR"/fortran/examples/${{ matrix.solver }} && make rtest

      # - name: Store artifacts
      #   uses: actions/upload-artifact@v3.1.2
      #   if: always()  # Always run even if the workflow is canceled manually or due to overtime.
      #   with:
      #     path: ${{ env.TEST_DIR }}/prima/fortran/tests/test.${{ matrix.solver }}/log/*.log

      - name: Remove the test data
        run: rm -rf ${{ env.TEST_DIR }}

  # The following job check whether the tests were successful or cancelled due to timeout.
  # N.B.: Remember to specify `continue-on-error: true` for the job of the tests.
  check_success_timeout:
    runs-on: ubuntu-latest
    if: ${{ !cancelled() }}
    needs: test
    steps:
      - name: Clone the GitHub actions scripts
        uses: actions/checkout@v3.5.3
        with:
          repository: equipez/github_actions_scripts
          ssh-key: ${{ secrets.SSH_PRIVATE_KEY_ACT }} # This forces checkout to use SSH, not HTTPS
          path: scripts

      - name: Check whether the tests were successful or cancelled due to timeout
        run: bash scripts/check_success_timeout_big_test ${{ secrets.GITHUB_TOKEN }} ${{ github.repository }} ${{ github.run_id }}
